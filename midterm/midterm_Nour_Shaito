#pip install validators
import json
import os
import requests
import validators


#-----------------------------------------
#choice1:open tab
def openTab(lst,title,url):
  lst.append({})
  lst[len(lst)-1]["Title"]=title
  lst[len(lst)-1]["URL"]=url
  print(lst[len(lst)-1])
#-----------------------------------------
#choice2:close tab
def closeTab(lst,index):
  if(index=="" and lst==[]):
    print("no Tab was found.")

  elif(index!="" and int(index)>(len(lst)-1) and lst!=[]):
    print("Tab is closed.")
    return lst.remove(lst[len(lst)-1])
    
  elif(index=="" and lst!=[]):
    print("Tab is closed.")
    return lst.remove(lst[len(lst)-1])

  elif(int(index)>(len(lst)-1) and index!="" and lst!=[]):
    print("Tab is closed.")
    return lst.remove(lst[len(lst)-1])
    
  else:
    print("Tab is closed.")
    return lst.remove(lst[int(index)])
#-----------------------------------------
#choice3:switch tab
def switchTab(lst,index1):
  if(index1=="" and lst==[]):
    return "no Tab was found."

  elif(index1=="" or int(index1)>(len(lst)-1) and lst!=[]):
    url1=lst[len(lst)-1].get("URL")
    return requests.get(url1).text

  else:
    for i in range(len(lst)):
      if(lst[i]==lst[int(index1)]):
        url2=lst[i].get("URL")
        return requests.get(url2).text
#-----------------------------------------
#choice4: Display All Tabs
def displayAllTabs(lst):
  if(lst==[]):
    print("no Tab was found.")
  else:
    for i in range(len(lst)):
      print("Main Tab: ",lst[i]["Title"])
      for key in lst[i]:
        if(key=="nested Title"):
          print("\t Sub Tab: ",lst[i]["nested Title"])
#-----------------------------------------
#choice5: Open Nested Tab
def openNestedTab(index2,lst,n_title,n_url):
  for i in range(len(lst)):
    if(lst[i]==lst[int(index2)]):
      lst[i]["nested Title"]=n_title
      lst[i]["nested URL"]=n_url
      return lst
#-----------------------------------------
#choice6: Clear All Tabs
def clearAllTabs(lst):    
    if(lst!=[]):
      lst.clear()
      print("All opened tabs are closed.")
    else:
      print("There is no opened tabs")
#-----------------------------------------
#json info from: https://www.geeksforgeeks.org/python-convert-list-of-dictionaries-to-json/
#choice7: Save Tabs
def saveTabs(lst,path):
  # path ex: "C:/Users/userc/OneDrive/Desktop/folder_name"
  # use forward slash (/) only
  save_file=open(path+"/savefile.json", "w") 
  json.dump(lst, save_file, indent = 1)

  save_file.close()
#-----------------------------------------
#choice8: Import Tabs
def importTabs(path): 
  # path ex: "C:/Users/userc/OneDrive/Desktop/folder_name/file_name.json"
  # use forward slash (/) only, after path add / + your json file_name+.json
    file= open(path,)
    data= json.load(file)
    print(data)
    file.close()
#-----------------------------------------
#define an empty list of dictionaries
lst=[]
#-----------------------------------------
choice=""
while(choice!="9"):
#print menu
  print("""1. Open Tab
2. Close Tab
3. Switch Tab
4. Display All Tabs
5. Open Nested Tab
6. Clear All Tabs
7. Save Tabs
8. Import Tabs
9. Exit
- - - - - - - - - - - - - - -""")
#-----------------------------------------
#user choice
  choice=input("Enter your choice: ")
  while(not choice.isnumeric()):
      choice=input("Error, please enter a valid number: ")
#1-----------------------------------------
#built in fn from: https://www.codingdeeply.com/python-check-if-url-is-valid/#google_vignette --- to validate URL
  if(choice=="1"):
    title=input("Enter the Title: ")
    url=input("Enter the URL: ")
    while(not validators.url(url)):
      url=input("Invalid URL, please enter a valid one: ")
    openTab(lst,title,url)
    print("- - - - - - - - - - - - - - -")
#2-----------------------------------------
  if(choice=="2"):
    index=input("Enter the index(0~"+str(len(lst)-1)+") of the Tab you want to close: ")
    if(index!=""):
      while(not index.isnumeric()):
        index=input("Error, please enter an index: ")
    closeTab(lst,index)
    print("- - - - - - - - - - - - - - -")

#3-----------------------------------------
  if(choice=="3"):
    index1=input("Enter the index(0~"+str(len(lst)-1)+") to viw content of Tab: ")
    if(index1!=""):
      while(not index1.isnumeric()):
        index1=input("Error, please enter an index: ")
    print(switchTab(lst,index1,url))
    print("- - - - - - - - - - - - - - -")
#4-----------------------------------------
  if(choice=="4"):
    displayAllTabs(lst)
    print("- - - - - - - - - - - - - - -")
#5-----------------------------------------
  if(choice=="5"):
    index2=input("Specify the index(0~"+str(len(lst)-1)+") of the main Tab : ")
    while(not index2.isnumeric()):
      index2=input("Error, please enter an index: ")

    if(int(index2)>=len(lst)):
      print("This Tab is not available.")
      
    else:
    n_title=input("Enter the Title of the nested Tab: ")
    n_url=input("Enter the URL of the nested Tab: ")
    openNestedTab(index2,lst,n_title,n_url)
  print("- - - - - - - - - - - - - - -")
#6-----------------------------------------
  if(choice=="6"):
    clearAllTabs(lst)
    print("- - - - - - - - - - - - - - -")
#7-----------------------------------------
  if(choice=="7"):
    path=input("Enter the path: ")
    isExisting=os.path.exists(path)
    while(isExisting==False):
      path=input("No such file or directory,enter a path: ")
      isExisting=os.path.exists(path)
    saveTabs(lst,path)
    print("- - - - - - - - - - - - - - -")
#8-----------------------------------------
  if(choice=="8"):
    path=input("Enter a path: ")
    isExisting=os.path.exists(path)
    while(isExisting==False):
      path=input("No such file or directory,enter a path: ")
      isExisting=os.path.exists(path)
    importTabs(path)
  print("- - - - - - - - - - - - - - -")
#9-----------------------------------------
  if(choice=="9"):
    print("EXIT the APP")
    
